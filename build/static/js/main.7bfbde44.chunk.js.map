{"version":3,"sources":["store/artists/artists.actions.js","store/artists/artists.thunk.js","components/Search.jsx","components/Header.jsx","components/ArtistGridItem.jsx","components/ArtistsGrid.jsx","components/ArtistInfo.jsx","components/AlbumGridItem.jsx","components/AlbumsGrid.jsx","components/App.js","store/artists/artists.reducer.js","reducers/index.js","store/index.js","index.js"],"names":["Actions","ARTISTS_FETCH_LIST","ARTISTS_FETCH_LIST_COMPLETE","ARTISTS_FETCH_LIST_FAIL","ARTIST_SET_INFO","ARTIST_SET_ALBUMS","artistsActions","getLists","type","getListsComplete","data","payload","getListsFail","error","setArtistInfo","setArtistAlbums","LAST_FM_API_ROOT","API_KEY","GET_TOP_ARTISTS","GET_ARTIST_INFO","GET_ARTIST_ALBUMS","fetchArtistsList","dispatch","axios","get","concat","then","_ref","artists","artist","Search","state","query","this","setState","search","value","name","props","onItemSelect","_this2","_this$props","className","filteredArtistItems","filter","toLowerCase","match","map","index","react_default","a","createElement","ExpectedArtistItem","onClick","key","StyledInput","placeholder","ref","input","onChange","handleInputChange","bind","isEmpty","ExpectedArtists","Component","SearchContainer","connect","list","routerActions","push","styled","ul","_templateObject","li","_templateObject2","_templateObject3","_templateObject4","SearchStyled","Header_templateObject","Header_templateObject2","Image","img","ArtistGridItem_templateObject","ArtistName","div","ArtistGridItem_templateObject2","image","onArtistSelect","imageUrl","find","obj","size","src","ArtistGridItem_templateObject3","ArtistsGridContainer","Object","objectSpread","withRouter","artistCardItems","components_ArtistGridItem","assign","ArtistsGrid_templateObject","ArtistInfo","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","params","fetchArtistInfo","clearInfo","onAlbumsRequest","summary","bio","RoundedImageWrapper","ArtistInfo_Image","ArtistInfo_ArtistName","AlbumsLoadButton","ArtistBio","dangerouslySetInnerHTML","__html","ArtistInfoContainer","info","artistName","_ref2","ArtistInfo_templateObject","ArtistInfo_templateObject2","ArtistInfo_templateObject3","ArtistInfo_templateObject4","_templateObject5","_templateObject6","AlbumGridName","AlbumGridItem_templateObject","AlbumGridItem_templateObject2","AlbumGridItem_templateObject3","albumName","AlbumGridItem_RoundedImageWrapper","AlbumGridItem_Image","AlbumGridItem_templateObject4","SORTING_OPTIONS","label","AlbumsGrid","_this","call","sortingOption","fetchArtistAlbums","albums","slice","albumGridItems","getFilteredAlbums","album","components_AlbumGridItem","SectionLabel","SortingSelect","onFilterChange","options","AlbumsListWrapper","AlbumsGridContainer","topalbums","_ref3","AlbumsGrid_templateObject","AlbumsGrid_templateObject2","Select","AlbumsGrid_templateObject3","AlbumsGrid_templateObject4","App","artistsList","callbacks","onAlbumsListRequest","components_Header","Switch","Route","path","component","ArtistsGrid","exact","Redirect","to","artistInfo","albumsList","initialState","artistsReducer","length","undefined","action","history","createBrowserHistory","store","createStore","combineReducers","router","connectRouter","rootReducer","applyMiddleware","routerMiddleware","thunk","configureStore","ReactDOM","render","es","lib","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.7bfbde44.chunk.js","sourcesContent":["export const Actions = {\n    ARTISTS_FETCH_LIST: 'ARTISTS_FETCH_LIST',\n    ARTISTS_FETCH_LIST_COMPLETE: 'ARTISTS_FETCH_LIST_COMPLETE',\n    ARTISTS_FETCH_LIST_FAIL: 'ARTISTS_FETCH_LIST_FAIL',\n\n    ARTIST_SET_INFO: 'ARTIST_SET_INFO',\n    ARTIST_SET_ALBUMS: 'ARTIST_SET_ALBUMS'\n};\n\nexport const artistsActions = {\n    getLists: () => ({type: Actions.ARTISTS_FETCH_LIST}),\n    getListsComplete: (data) => ({type: Actions.ARTISTS_FETCH_LIST_COMPLETE, payload: data}),\n    getListsFail: (error) => ({type: Actions.ARTISTS_FETCH_LIST_FAIL, error}),\n\n    setArtistInfo: (data) => ({type: Actions.ARTIST_SET_INFO, payload: data}),\n    setArtistAlbums: (data) => ({type: Actions.ARTIST_SET_ALBUMS, payload: data}),\n};","import axios from 'axios';\nimport { artistsActions } from './artists.actions';\n\nconst LAST_FM_API_ROOT = 'http://ws.audioscrobbler.com/2.0/';\nconst API_KEY = '4cb074e4b8ec4ee9ad3eb37d6f7eb240';\nconst GET_TOP_ARTISTS = 'chart.gettopartists';\nconst GET_ARTIST_INFO = 'artist.getinfo';\nconst GET_ARTIST_ALBUMS = 'artist.gettopalbums';\n\nexport function fetchArtistsList(dispatch) {\n    return function() {\n        return axios.get(`${ LAST_FM_API_ROOT }?method=${ GET_TOP_ARTISTS }&api_key=${ API_KEY }&format=json`)\n            .then(({ data }) => {\n                dispatch(artistsActions.getListsComplete(data.artists.artist));\n            });\n    };\n}\n\nexport function fetchArtistInfo(artistName) {\n    return function(dispatch) {\n        return axios.get(`${ LAST_FM_API_ROOT }?method=${ GET_ARTIST_INFO }&artist=${ artistName }&api_key=${ API_KEY }&format=json`)\n            .then(({ data }) => {\n                dispatch(artistsActions.setArtistInfo(data));\n            });\n    };\n}\n\nexport function fetchArtistAlbums(artistName) {\n    return function(dispatch) {\n        return axios.get(`${ LAST_FM_API_ROOT }?method=${ GET_ARTIST_ALBUMS }&artist=${ artistName }&api_key=${ API_KEY }&format=json`)\n            .then(({ data }) => {\n                dispatch(artistsActions.setArtistAlbums(data));\n            });\n    };\n}","import React, {Component} from 'react'\nimport styled from 'styled-components';\nimport {isEmpty} from 'lodash';\nimport {connect} from 'react-redux';\nimport {routerActions} from 'connected-react-router';\n\nconst SEARCH_PLACEHOLDER = 'Search';\n\nclass Search extends Component {\n    state = {\n        query: '',\n    };\n\n    handleInputChange() {\n        this.setState({\n            query: this.search.value\n        });\n    };\n\n    onItemSelect(name) {\n        this.props.onItemSelect(name);\n        this.setState({query: ''});\n        this.search.value = '';\n    }\n\n    render() {\n        const {artists, className} = this.props;\n        const {query} = this.state;\n        const filteredArtists = artists.filter((artist) => {\n            const {name} = artist;\n            return name.toLowerCase().match(query.toLowerCase());\n        });\n        const filteredArtistItems = filteredArtists.map((artist, index) => {\n            const {name} = artist;\n            return <ExpectedArtistItem onClick={() => this.onItemSelect(name)} key={ index }>{ name }</ExpectedArtistItem>;\n        });\n\n        return (\n            <div className={className}>\n                <StyledInput\n                    placeholder={ SEARCH_PLACEHOLDER }\n                    ref={input => this.search = input}\n                    onChange={this.handleInputChange.bind(this)}\n                />\n                { !isEmpty(filteredArtistItems) && !isEmpty(query) ?\n                    <ExpectedArtists>{ filteredArtistItems }</ExpectedArtists> :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\nconst SearchContainer = connect(\n    (state) => ({\n        artists: state.artists.list\n    }),\n    (dispatch) => ({\n        onItemSelect: (name) => dispatch(routerActions.push(`/artists/${name}`))\n    })\n)(Search);\n\nconst ExpectedArtists = styled.ul`\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    position: relative;\n    z-index: 999;\n    width: 50%;\n    border-radius: 4px;\n`;\n\nconst ExpectedArtistItem = styled.li`\n    background: #f8f8f8;\n    width: 100%;\n    height: 20px;\n    cursor: pointer;\n    padding: 5px;\n    font-family: Helvetica;\n    font-weight: 200;\n    \n    &:hover {\n        background: #f0f0f0;\n    }\n`;\n\nconst StyledInput = styled.input`\n    width: 50%;\n    height: 100%;\n    box-sizing: border-box;\n    border: none;\n    font-size: 20px;\n    padding: 0 10px;\n    outline: none;\n    font-weight: 200;\n`;\n\nexport default styled(SearchContainer)`\n    width: 100%;\n    height: 100%;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Search from './Search';\n\nconst Header = (props) => {\n    const { artists, className } = props;\n    return (\n        <div className={className}>\n            <SearchStyled artists={ artists } />\n        </div>\n    );\n};\n\nconst SearchStyled = styled(Search)`\n    width: 50%;\n`;\n\nexport default styled(Header)`\n    width: 100%;\n    height: 50px;\n    background: #fff;\n`","import React from 'react';\nimport styled from 'styled-components';\n\nconst ArtistGridItem = (props) => {\n    const {className, image, onArtistSelect} = props;\n    const imageUrl = image.find((obj) => obj.size === 'large')['#text'];\n\n    return (\n        <div className={ className } onClick={onArtistSelect}>\n            <Image src={ imageUrl }/>\n            <ArtistName>{ props.name }</ArtistName>\n        </div>\n    );\n};\n\nconst Image = styled.img`\n    position: absolute;\n    width: 100%;\n`;\n\nconst ArtistName = styled.div`\n    position: absolute;\n    height: 16px;\n    width: 100%;\n    background: #fff;\n    bottom: 0;\n    left: 0;\n    font-family: Helvetica;\n    padding: 10px;\n    font-weight: 200;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`;\n\nexport default styled(ArtistGridItem)`\n    flex: 0 0 150px;\n    border-radius: 4px;\n    height: 150px;\n    overflow: hidden;\n    margin: 10px;\n    position: relative;\n    cursor: pointer;\n    background: #ddd;\n`;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport {routerActions} from 'connected-react-router';\nimport styled from 'styled-components';\n\nimport ArtistGridItem from './ArtistGridItem';\n\nconst ArtistsGrid = (props) => {\n    const {className, artists, onArtistSelect} = props;\n    const artistCardItems = artists.map((artist, index) =>\n        <ArtistGridItem { ...artist }\n                        key={ index }\n                        onArtistSelect={() => onArtistSelect(artist.name) }/>);\n\n    return (\n        <div className={ className }>\n            { artistCardItems }\n        </div>\n    );\n};\n\nconst ArtistsGridContainer = connect(\n    (state, props) =>\n        ({\n            artists: state.artists.list, ...props\n        }),\n    (dispatch) =>\n        ({\n            onArtistSelect: (name) => dispatch(routerActions.push(`/artists/${name}`))\n        })\n)(withRouter(ArtistsGrid));\n\nexport default styled(ArtistsGridContainer)`\n    width: 100%;\n    background: #f1f1f1;\n    overflow: hidden;\n    margin: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n`;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport {routerActions} from 'connected-react-router';\nimport styled from 'styled-components';\nimport {isEmpty} from 'lodash';\nimport {artistsActions} from '../store/artists/artists.actions';\nimport {fetchArtistInfo} from '../store/artists/artists.thunk';\n\nexport class ArtistInfo extends Component {\n    componentDidMount() {\n        const {match} = this.props;\n        const {name} = match.params;\n        this.props.fetchArtistInfo(name);\n    }\n\n    componentWillUnmount() {\n        this.props.clearInfo();\n    }\n\n    render() {\n        if (isEmpty(this.props.artist)) {\n            return null;\n        }\n        const {className, onAlbumsRequest, artist} = this.props;\n        const {image, name, bio} = artist;\n        const {summary} = bio;\n        const imageUrl = image.find((obj) => obj.size === 'mega')['#text'];\n\n        return (\n            <div className={className}>\n                <RoundedImageWrapper>\n                    <Image src={imageUrl}/>\n                </RoundedImageWrapper>\n                <ArtistName>{ name }</ArtistName>\n                <AlbumsLoadButton onClick={() => {\n                    onAlbumsRequest(name)\n                }}>Albums</AlbumsLoadButton>\n                <ArtistBio dangerouslySetInnerHTML={{__html: summary}}></ArtistBio>\n            </div>\n        );\n    }\n}\n// dangerouslySetInnerHTML is used here to render the link element which points to last.fm service\n\nexport const ArtistInfoContainer = connect(\n    (state, props) => ({\n        artist: state.artists.info.artist, ...props\n    }),\n    (dispatch) => ({\n        fetchArtistInfo: (name) => dispatch(fetchArtistInfo(name)),\n        clearInfo: () => dispatch(artistsActions.setArtistInfo({})),\n        onAlbumsRequest: (name) => dispatch(routerActions.push(`/artists/${name}/albums`))\n    })\n)(withRouter(ArtistInfo));\n\nconst AlbumsLoadButton = styled.div`\n    width: 100px;\n    height: 40px;\n    line-height: 40px;\n    border: 2px solid #e7e7e7;\n    float: left;\n    font-family: Helvetica;\n    font-weight: 100;\n    text-align: center;\n    cursor: pointer;\n    margin: 10px 0 0 10px;\n    border-radius: 4px;\n    \n    &:hover {\n        background: #e1e1e1;\n    }\n`;\n\nconst ArtistBio = styled.div`\n    float: left;\n    margin-top: 10px;\n    font-family: Helvetica;\n    font-weight: 100;\n`;\n\nconst ArtistName = styled.div`\n    font-family: Helvetica;\n    font-weight: 200;\n    font-size: 32px;\n    width: calc(100% - 210px);\n    float: left;\n    margin-left: 10px;\n`;\n\nconst Image = styled.img`\n    width: 100%;\n    height: auto;\n    padding: 0 10px 10px 0;\n`;\n\nconst RoundedImageWrapper = styled.div`\n    border-radius: 50%;\n    width: 200px;\n    height: 200px;\n    overflow: hidden;\n    float: left;\n`;\n\nexport default styled(ArtistInfoContainer)`\n    overflow: hidden;\n    padding: 10px;\n    margin: 0 10px;\n    background: #f1f1f1;\n    border-radius: 4px;\n`","import React from 'react';\nimport styled from 'styled-components';\n\nconst AlbumGridItem = (props) => {\n    const { className, name: albumName, image } = props;\n    const imageUrl = image.find((obj) => obj.size === 'medium')['#text'];\n\n    return (\n        <div className={className}>\n            <RoundedImageWrapper>\n                <Image src={imageUrl} />\n            </RoundedImageWrapper>\n            <AlbumGridName>{albumName}</AlbumGridName>\n        </div>\n    );\n};\n\nconst AlbumGridName = styled.div`\n    font-family: Helvetica;\n    font-weight: 100;\n    margin-left: 10px;\n    float: left;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    width: calc(100% - 60px);\n    line-height: 50px;\n`;\n\nconst Image = styled.img`\n    width: 100%;\n`;\n\nconst RoundedImageWrapper = styled.div`\n    border-radius: 50%;\n    overflow: hidden;\n    width: 50px;\n    height: 50px;\n    float: left;\n`;\n\nexport default styled(AlbumGridItem)`\n    width: calc(50% - 30px);\n    margin: 5px;\n    padding: 10px;\n    height: 50px;\n    background: #e9e9e9;\n    float: left;\n    border-radius: 4px;\n`;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport styled from 'styled-components';\nimport Select from 'react-select';\n\nimport {fetchArtistAlbums} from '../store/artists/artists.thunk';\nimport AlbumGridItem from './AlbumGridItem';\n\nconst SORTING_OPTIONS = [\n    {value: 10, label: 'Top 10 Albums'},\n    {value: 15, label: 'Top 15 Albums'},\n    {value: 20, label: 'Top 20 Albums'}\n];\n\nclass AlbumsGrid extends Component {\n    constructor() {\n        super();\n        this.state = {sortingOption: SORTING_OPTIONS[0]}; // setting default sorting count to 10\n    }\n\n    componentDidMount() {\n        const {match} = this.props;\n        const {name} = match.params;\n        this.props.fetchArtistAlbums(name);\n    }\n\n    onFilterChange(sortingOption) {\n        this.setState({sortingOption});\n    }\n\n    getFilteredAlbums() {\n        const {sortingOption} = this.state;\n        const { albums } = this.props;\n\n        return albums.slice(0, sortingOption.value);\n    }\n\n    render() {\n        const {className} = this.props;\n        const { sortingOption } = this.state;\n        const requestedAlbums = this.getFilteredAlbums();\n        const albumGridItems = requestedAlbums.map((album, index) => <AlbumGridItem {...album} key={index} />);\n\n        return (\n            <div className={className}>\n                <SectionLabel>Albums</SectionLabel>\n                <SortingSelect\n                    value={sortingOption}\n                    onChange={this.onFilterChange.bind(this)}\n                    options={ SORTING_OPTIONS }\n                />\n                <AlbumsListWrapper>\n                    { albumGridItems }\n                </AlbumsListWrapper>\n            </div>\n        );\n    }\n}\n\nexport const AlbumsGridContainer = connect(\n    (state, props) => ({\n        albums: state.artists.albums.topalbums.album, ...props\n    }),\n    (dispatch) => ({\n        fetchArtistAlbums: (name) => dispatch(fetchArtistAlbums(name)),\n    })\n)(withRouter(AlbumsGrid));\n\nexport default styled(AlbumsGridContainer)`\n  \n`;\n\nconst AlbumsListWrapper = styled.div`\n    overflow: hidden;\n    width: 100%;\n    padding: 10px;\n    box-sizing: border-box;\n`;\n\nconst SortingSelect = styled(Select)`\n    top: 5px;\n    width: 25%;\n    float: right;\n    font-family: Helvetica;\n    cursor: pointer;\n    padding-right: 10px;\n`;\n\nconst SectionLabel = styled.div`\n    font-family: Helvetica;\n    padding: 10px;\n    font-size: 22px;\n    font-weight: 100;\n    width: 50%;\n    float: left;\n    box-sizing: border-box;\n`;","import React, {Component} from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport {fetchArtistsList} from '../store/artists/artists.thunk';\n\nimport Header from './Header';\nimport ArtistsGrid from './ArtistsGrid';\nimport ArtistInfo from './ArtistInfo';\nimport AlbumsGrid from './AlbumsGrid';\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.fetchArtistsList();\n    }\n\n    fetchArtistInfo(artistName) {\n        this.props.fetchArtistInfo(artistName);\n    }\n\n    fetchArtistAlbums(artistName) {\n        this.props.fetchArtistAlbums(artistName);\n    }\n\n    render() {\n        const {artists} = this.props.artistsList;\n        const callbacks = {\n            onArtistSelect: this.fetchArtistInfo.bind(this),\n            onAlbumsListRequest: this.fetchArtistAlbums.bind(this)\n        };\n\n        return (\n            <div className=\"App\">\n                <Header {...artists} {...callbacks} />\n                <Switch>\n                    <Route path=\"/artists\" component={ArtistsGrid} exact />\n                    <Route path=\"/artists/:name\" component={ArtistInfo} exact />\n                    <Route path=\"/artists/:name/albums\" component={AlbumsGrid} exact />\n                    <Redirect to=\"/artists\"/>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    (state) => ({\n        artistsList: state.artists.list,\n        artistInfo: state.artists.info,\n        albumsList: state.artists.albums,\n    }),\n    (dispatch) => ({\n        fetchArtistsList: dispatch(fetchArtistsList)\n    })\n)(App);","import { Actions } from './artists.actions';\n\nconst initialState = {\n    list: [],\n    info: {\n        artist: {}\n    },\n    albums: {\n        topalbums:{\n            album: []\n        }\n    }\n};\n\nexport function artistsReducer(state = initialState, action) {\n    switch (action.type) {\n        case Actions.ARTISTS_FETCH_LIST_COMPLETE:\n            return {\n                ...state,\n                list: action.payload\n            };\n        case Actions.ARTIST_SET_INFO:\n            return {\n                ...state,\n                info: action.payload\n            };\n        case Actions.ARTIST_SET_ALBUMS:\n            return {\n                ...state,\n                albums: action.payload\n            };\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { artistsReducer } from '../store/artists/artists.reducer';\n\n\nexport const rootReducer = (history) => combineReducers({\n    artists: artistsReducer,\n    router: connectRouter(history)\n});","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport { rootReducer } from '../reducers';\n\nexport const configureStore = () => {\n    const history = createBrowserHistory();\n    const store = createStore(\n        rootReducer(history),\n        applyMiddleware(routerMiddleware(history), thunk)\n    );\n\n    return {\n        store,\n        history\n    };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\n\nimport App from './components/App';\n\nimport { configureStore } from './store';\nconst {store, history} = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App />\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}